/* ARC flag defintions.
   Copyright (C) 2023 Free Software Foundation, Inc.

   Contributed by Claudiu Zissulescu (claziss@synopsys.com)
   Refactored by Cupertino Miranda (cmiranda@synopsys.com)

   This file is part of libopcodes.

   This library is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3, or (at your option)
   any later version.

   It is distributed in the hope that it will be useful, but WITHOUT
   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
   License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software Foundation,
   Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.  */

FLAG(ALWAYS, "al", 0, 0, 0, 0)
FLAG(RA, "ra", 0, 0, 0, 0)
FLAG(EQUAL, "eq", 1, 5, 0, 1)
FLAG(ZERO, "z", 1, 5, 0, 0)
FLAG(NOTEQUAL, "ne", 2, 5, 0, 1)
FLAG(NOTZERO, "nz", 2, 5, 0, 0)
FLAG(POZITIVE, "p", 3, 5, 0, 1)
FLAG(PL, "pl", 3, 5, 0, 0)
FLAG(NEGATIVE, "n", 4, 5, 0, 1)
FLAG(MINUS, "mi", 4, 5, 0, 0)
FLAG(CARRY, "c", 5, 5, 0, 1)
FLAG(CARRYSET, "cs", 5, 5, 0, 0)
FLAG(LOWER, "lo", 5, 5, 0, 0)
FLAG(CARRYCLR, "cc", 6, 5, 0, 0)
FLAG(NOTCARRY, "nc", 6, 5, 0, 1)
FLAG(HIGHER, "hs", 6, 5, 0, 0)
FLAG(OVERFLOWSET, "vs", 7, 5, 0, 0)
FLAG(OVERFLOW, "v", 7, 5, 0, 1)
FLAG(NOTOVERFLOW, "nv", 8, 5, 0, 1)
FLAG(OVERFLOWCLR, "vc", 8, 5, 0, 0)
FLAG(GT, "gt", 9, 5, 0, 1)
FLAG(GE, "ge", 10, 5, 0, 1)
FLAG(LT, "lt", 11, 5, 0, 1)
FLAG(LE, "le", 12, 5, 0, 1)
FLAG(HI, "hi", 13, 5, 0, 1)
FLAG(LS, "ls", 14, 5, 0, 1)
FLAG(PNZ, "pnz", 15, 5, 0, 1)
FLAG(NJ, "nj", 21, 5, 0, 1)
FLAG(NM, "nm", 23, 5, 0, 1)
FLAG(NO_T, "nt", 24, 5, 0, 1)

  /* FLAG.  */
FLAG(FLAG, "f", 1, 1, 15, 1)
FLAG(FFAKE, "f", 0, 0, 0, 1)
FLAG(AQ, "aq", 1, 1, 15, 1)
FLAG(RL, "rl", 1, 1, 15, 1)

  /* Atomic operations.  */
FLAG(ATO_ADD, "add", 0, 3, 0, 1)
FLAG(ATO_OR, "or", 1, 3, 0, 1)
FLAG(ATO_AND, "and", 2, 3, 0, 1)
FLAG(ATO_XOR, "xor", 3, 3, 0, 1)
FLAG(ATO_MINU, "minu", 4, 3, 0, 1)
FLAG(ATO_MAXU, "maxu", 5, 3, 0, 1)
FLAG(ATO_MIN, "min", 6, 3, 0, 1)
FLAG(ATO_MAX, "max", 7, 3, 0, 1)

  /* Delay slot.  */
FLAG(ND, "nd", 0, 1, 5, 0)
FLAG(D, "d", 1, 1, 5, 1)
FLAG(DFAKE, "d", 0, 0, 0, 1)
FLAG(DNZ_ND, "nd", 0, 1, 16, 0)
FLAG(DNZ_D, "d", 1, 1, 16, 1)

  /* Data size.  */
FLAG(SIZEB1, "b", 1, 2, 1, 1)
FLAG(SIZEB7, "b", 1, 2, 7, 1)
FLAG(SIZEB17, "b", 1, 2, 17, 1)
FLAG(SIZEW1, "w", 2, 2, 1, 0)
FLAG(SIZEW7, "w", 2, 2, 7, 0)
FLAG(SIZEW17, "w", 2, 2, 17, 0)

  /* Sign extension.  */
FLAG(SIGN6, "x", 1, 1, 6, 1)
FLAG(SIGN16, "x", 1, 1, 16, 1)
FLAG(SIGNX, "x", 0, 0, 0, 1)

  /* Address write-back modes.  */
FLAG(A3, "a", 1, 2, 3, 0)
FLAG(A9, "a", 1, 2, 9, 0)
FLAG(A22, "a", 1, 2, 22, 0)
FLAG(AW3, "aw", 1, 2, 3, 1)
FLAG(AW9, "aw", 1, 2, 9, 1)
FLAG(AW22, "aw", 1, 2, 22, 1)
FLAG(AB3, "ab", 2, 2, 3, 1)
FLAG(AB9, "ab", 2, 2, 9, 1)
FLAG(AB22, "ab", 2, 2, 22, 1)
FLAG(AS3, "as", 3, 2, 3, 1)
FLAG(AS9, "as", 3, 2, 9, 1)
FLAG(AS22, "as", 3, 2, 22, 1)
FLAG(ASFAKE, "as", 0, 0, 0, 1)

/* address writebacks for 128-bit loads.
   ,---.---.----------.
   | X | D | mnemonic |
   |---+---+----------|
   | 0 | 0 | none     |
   | 0 | 1 | as       |
   | 1 | 0 | a/aw     |
   | 1 | 1 | ab       |
   `---^---^----------'  */
FLAG(AA128, "a", 2, 2, 15, 0)
FLAG(AA128W, "aw", 2, 2, 15, 1)
FLAG(AA128B, "ab", 3, 2, 15, 1)
FLAG(AA128S, "as", 1, 2, 15, 1)

  /* Cache bypass.  */
FLAG(DI5, "di", 1, 1, 5, 1)
FLAG(DI11, "di", 1, 1, 11, 1)
FLAG(DI14, "di", 1, 1, 14, 1)
FLAG(DI15, "di", 1, 1, 15, 1)

  /* ARCv2 specific.  */
FLAG(NT, "nt", 0, 1, 3, 1)
FLAG(T, "t", 1, 1, 3, 1)
FLAG(H1, "h", 2, 2, 1, 1)
FLAG(H7, "h", 2, 2, 7, 1)
FLAG(H17, "h", 2, 2, 17, 1)
/* Fake */
FLAG(SIZED, "dd", 8, 0, 0, 0)
/* Fake */
FLAG(SIZEL, "dl", 8, 0, 0, 0)
/* Fake */
FLAG(SIZEW, "xx", 4, 0, 0, 0)

  /* Fake Flags.  */
FLAG(NE, "ne", 0, 0, 0, 1)

/* ARC NPS400 Support: See comment near head of arcxx-opc.inc file.  */
FLAG(NPS_CL, "cl", 0, 0, 0, 1)
FLAG(NPS_NA, "na", 1, 1, 9, 1)
FLAG(NPS_SR, "s", 1, 1, 13, 1)
FLAG(NPS_M, "m", 1, 1, 7, 1)
FLAG(NPS_FLAG, "f", 1, 1, 20, 1)
FLAG(NPS_R, "r", 1, 1, 15, 1)
FLAG(NPS_RW, "rw", 0, 1, 7, 1)
FLAG(NPS_RD, "rd", 1, 1, 7, 1)
FLAG(NPS_WFT, "wft", 0, 0, 0, 1)
FLAG(NPS_IE1, "ie1", 1, 2, 8, 1)
FLAG(NPS_IE2, "ie2", 2, 2, 8, 1)
FLAG(NPS_IE12, "ie12", 3, 2, 8, 1)
FLAG(NPS_SYNC_RD, "rd", 0, 1, 6, 1)
FLAG(NPS_SYNC_WR, "wr", 1, 1, 6, 1)
FLAG(NPS_HWS_OFF, "off", 0, 0, 0, 1)
FLAG(NPS_HWS_RESTORE, "restore", 0, 0, 0, 1)
FLAG(NPS_SX, "sx", 1, 1, 14, 1)
FLAG(NPS_AR, "ar", 0, 1, 0, 1)
FLAG(NPS_AL, "al", 1, 1, 0, 1)
FLAG(NPS_S, "s", 0, 0, 0, 1)
FLAG(NPS_ZNCV_RD, "rd", 0, 1, 15, 1)
FLAG(NPS_ZNCV_WR, "wr", 1, 1, 15, 1)
FLAG(NPS_P0, "p0", 0, 0, 0, 1)
FLAG(NPS_P1, "p1", 0, 0, 0, 1)
FLAG(NPS_P2, "p2", 0, 0, 0, 1)
FLAG(NPS_P3, "p3", 0, 0, 0, 1)
FLAG(NPS_LDBIT_DI, "di", 0, 0, 0, 1)
FLAG(NPS_LDBIT_CL1, "cl", 1, 1, 6, 1)
FLAG(NPS_LDBIT_CL2, "cl", 1, 1, 16, 1)
FLAG(NPS_LDBIT_X2_1, "x2", 1, 2, 9, 1)
FLAG(NPS_LDBIT_X2_2, "x2", 1, 2, 22, 1)
FLAG(NPS_LDBIT_X4_1, "x4", 2, 2, 9, 1)
FLAG(NPS_LDBIT_X4_2, "x4", 2, 2, 22, 1)
FLAG(NPS_CORE, "core", 1, 3, 6, 1)
FLAG(NPS_CLSR, "clsr", 2, 3, 6, 1)
FLAG(NPS_ALL, "all", 3, 3, 6, 1)
FLAG(NPS_GIC, "gic", 4, 3, 6, 1)
FLAG(NPS_RSPI_GIC, "gic", 5, 3, 6, 1)
