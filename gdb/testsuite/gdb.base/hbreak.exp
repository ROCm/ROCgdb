# Copyright 2009-2024 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

require allow_hw_breakpoint_tests

set test hbreak
set srcfile ${test}.c
if { [prepare_for_testing "failed to prepare" ${test} ${srcfile}] } {
    return -1
}

if ![runto_main] {
    return -1
}

set breakline [gdb_get_line_number "break-at-exit"]

set re_loc "file \[^\r\n\]*$srcfile, line $breakline"
set re_dot [string_to_regexp .]

set addr 0x0
gdb_test_multiple "hbreak ${srcfile}:${breakline}" "hbreak" {
    -re -wrap "Hardware assisted breakpoint $decimal at ($hex): $re_loc$re_dot" {
	set addr $expect_out(1,string)
	pass $gdb_test_name
    }
}

set have_xfail 0
if { [istarget arm*-*-*] } {
    # When running 32-bit userland on aarch64 kernel, thumb instructions that
    # are not 4-byte aligned may not be supported for setting a hardware
    # breakpoint on.
    set have_xfail [expr ($addr & 0x2) == 2]
}

set re_xfail \
    [string_to_regexp \
	 "Unexpected error setting breakpoint: Invalid argument."]

gdb_test_multiple "continue" "continue to break-at-exit after hbreak" {
    -re -wrap "Continuing\\.\[ \r\n\]+Breakpoint \[0-9\]+, .*break-at-exit.*" {
	pass $gdb_test_name
    }
    -re -wrap $re_xfail {
	if { $have_xfail } {
	    xfail $gdb_test_name
	} else {
	    fail $gdb_test_name
	}
    }
}
