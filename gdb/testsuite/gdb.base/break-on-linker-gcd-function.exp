# Copyright 2011-2022 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# This file is part of the gdb testsuite

# Test casting, especially between class types or pointer-to-class
# types.

# This file is part of the gdb testsuite

#
# test running programs
#
if { [skip_cplus_tests] } { continue }

standard_testfile .cc

if {[build_executable_from_specs $testfile.exp $testfile \
       {c++ additional_flags=-Wl,--gc-sections} \
       $srcfile {debug c++ additional_flags=-ffunction-sections}]} {
    untested "failed to compile"
    return -1
}

clean_restart $testfile

proc set_breakpoint_on_gcd_function {} {
    # Single hex digit
    set xd {[0-9a-f]}

    set lineno [gdb_get_line_number "gdb break here"]
    gdb_test "set breakpoint pending on"
    gdb_test "b $lineno" \
	"No compiled code for line $lineno in the current file.\r\nBreakpoint $::decimal \\($lineno\\) pending."
}

set_breakpoint_on_gcd_function

set saved_gdbflags $GDBFLAGS
set GDBFLAGS "$GDBFLAGS --readnow"
clean_restart ${testfile}
set GDBFLAGS $saved_gdbflags

with_test_prefix "readnow" {
    set_breakpoint_on_gcd_function
}
