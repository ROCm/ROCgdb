# Copyright 2022 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Regression test for PR gdb/7161.  Test that GDB cannot delete non-user
# breakpoints with clear command.

proc get_maint_info_bp { var } {
    global expect_out
    global gdb_prompt

    gdb_test_multiple "maint info break $var" "find address of internal bp $var" {
	-re ".*(0x\[0-9a-f\]+).*$gdb_prompt $" {
	    return $expect_out(1,string)
	}
	timeout {
	    perror "couldn't find address of $var"
	    return ""
	}
    }
    return ""
}

standard_testfile .c

# This testcase just needs a "Hello world" source file, reuse
# gdb.base/main.c instead of adding a new one.
if  { [gdb_compile "${srcdir}/${subdir}/main.c" "${binfile}" executable {debug}] != "" } {
    untested "failed to compile"
    return -1
}

# Start with a fresh gdb.
clean_restart ${binfile}

if ![runto_main] then {
    return 0
}

gdb_test "break main.c:21" \
    ".*Breakpoint.* at .*" \
    "set breakpoint"

set bp_addr [get_maint_info_bp "-1"]

gdb_test "maint info break -1" \
    "-1.*shlib events.*keep y.*$bp_addr.*" \
    "maint info breakpoint -1 error"

gdb_test "clear *$bp_addr" \
    "No breakpoint at \\*$bp_addr." \
    "clear internal breakpoint error"

